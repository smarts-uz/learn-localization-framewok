"use client";

// src/ExtractPlasmicQueryData.tsx
import { plasmicPrepassExtract } from "@plasmicapp/prepass";
import * as React from "react";
function ExtractPlasmicQueryData(props) {
  const { children } = props;
  if (!("useId" in React) || !("use" in React)) {
    throw new Error(
      `You can only use <ExtractPlasmicQueryData /> from server components.`
    );
  }
  const scriptId = `plasmic-prefetch-${React["useId"]()}`;
  if (typeof window === "undefined") {
    const {
      queryData,
      headMetadata
    } = React["use"](plasmicPrepassExtract(/* @__PURE__ */ React.createElement(React.Fragment, null, children)));
    return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(
      "script",
      {
        type: "application/json",
        dangerouslySetInnerHTML: { __html: JSON.stringify(queryData) },
        "data-plasmic-prefetch-id": scriptId,
        suppressHydrationWarning: true
      }
    ), headMetadata && /* @__PURE__ */ React.createElement(
      "script",
      {
        type: "application/json",
        dangerouslySetInnerHTML: {
          __html: JSON.stringify(headMetadata)
        },
        "data-plasmic-head-metadata-id": scriptId,
        suppressHydrationWarning: true
      }
    ));
  } else {
    return null;
  }
}
export {
  ExtractPlasmicQueryData
};
//# sourceMappingURL=index.esm.js.map
