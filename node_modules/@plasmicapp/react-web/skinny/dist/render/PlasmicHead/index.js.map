{"version":3,"file":"index.js","sources":["../../../../src/render/PlasmicHead/index.tsx"],"sourcesContent":["import * as plasmicQuery from \"@plasmicapp/query\";\nimport * as React from \"react\";\n\nexport const PlasmicHeadContext = React.createContext<\n  React.ComponentType<any> | undefined\n>(undefined);\n\nexport function PlasmicHead(props: plasmicQuery.HeadMetadata) {\n  const Head = React.useContext(PlasmicHeadContext);\n  const headMetadata =\n    // Check if `HeadMetadataContext` is exported for backward compatibility\n    \"HeadMetadataContext\" in plasmicQuery\n      ? React.useContext(plasmicQuery.HeadMetadataContext)\n      : undefined;\n\n  if (headMetadata) {\n    // If we have the Head metadata object specified, mutate it so to ensure it\n    // stores the data that should go in the <head>.\n    if (props.image) {\n      headMetadata.image = props.image;\n    }\n    if (props.title) {\n      headMetadata.title = props.title;\n    }\n    if (props.description) {\n      headMetadata.description = props.description;\n    }\n    if (props.canonical) {\n      headMetadata.canonical = props.canonical;\n    }\n  }\n\n  if (!Head) {\n    console.warn(\n      `Plasmic: Head meta tags are being ignored. To make them work, pass a Head component into PlasmicRootProvider.`\n    );\n    // TODO: Link to doc about Head.\n    return null;\n  }\n\n  // Helmet does not support React.Fragments, so we need to use `[<meta />,\n  // <meta />]` instead of `<><meta /><meta /></>`.\n  return (\n    <Head>\n      {props.image ? (\n        [\n          <meta\n            key=\"twitter:card\"\n            name=\"twitter:card\"\n            content=\"summary_large_image\"\n          />,\n          <meta key=\"og:image\" property=\"og:image\" content={props.image} />,\n          <meta\n            key=\"twitter:image\"\n            name=\"twitter:image\"\n            content={props.image}\n          />,\n        ]\n      ) : (\n        <meta key=\"twitter:card\" name=\"twitter:card\" content=\"summary\" />\n      )}\n      {props.title && [\n        <title key=\"title\">{props.title}</title>,\n        <meta key=\"og:title\" property=\"og:title\" content={props.title} />,\n        <meta\n          key=\"twitter:title\"\n          property=\"twitter:title\"\n          content={props.title}\n        />,\n      ]}\n      {props.description && [\n        <meta\n          key=\"description\"\n          name=\"description\"\n          content={props.description}\n        />,\n        <meta\n          key=\"og:description\"\n          property=\"og:description\"\n          content={props.description}\n        />,\n        <meta\n          key=\"twitter:description\"\n          name=\"twitter:description\"\n          content={props.description}\n        />,\n      ]}\n      {props.canonical && (\n        <link key=\"canonical\" rel=\"canonical\" href={props.canonical} />\n      )}\n    </Head>\n  );\n}\n\nexport const plasmicHeadMeta = {\n  name: \"hostless-plasmic-head\",\n  displayName: \"Page Metadata Override\",\n  description: \"Set page metadata (HTML <head />) to dynamic values.\",\n  importName: \"PlasmicHead\",\n  importPath: \"@plasmicapp/react-web\",\n  isRepeatable: false,\n  styleSections: false,\n  props: {\n    title: {\n      type: \"string\",\n      displayName: \"Title\",\n    },\n    description: {\n      type: \"string\",\n      displayName: \"Description\",\n    },\n    image: {\n      type: \"imageUrl\",\n      displayName: \"Image\",\n    },\n    canonical: {\n      type: \"string\",\n      displayName: \"Canonical URL\",\n    },\n  },\n};\n"],"names":[],"mappings":"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"}