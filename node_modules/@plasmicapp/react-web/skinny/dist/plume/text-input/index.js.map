{"version":3,"file":"index.js","sources":["../../../../src/plume/text-input/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { omit, pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\n\nexport interface BaseTextInputProps\n  extends Omit<React.ComponentProps<\"input\">, \"type\" | \"disabled\">,\n    PlumeTextInputProps {}\n\nexport interface PlumeTextInputProps {\n  showStartIcon?: boolean;\n  showEndIcon?: boolean;\n  startIcon?: React.ReactNode;\n  endIcon?: React.ReactNode;\n  isDisabled?: boolean;\n  type?: \"text\" | \"password\" | \"email\" | \"url\" | string;\n  inputClassName?: string;\n  inputStyle?: React.CSSProperties;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport interface TextInputRefValue {\n  focus: () => void;\n  blur: () => void;\n  getRoot: () => HTMLElement | null;\n  getInput: () => HTMLInputElement | null;\n}\n\nexport type TextInputRef = React.Ref<TextInputRefValue>;\n\ninterface TextInputConfig<C extends AnyPlasmicClass> {\n  showStartIconVariant: VariantDef<PlasmicClassVariants<C>>;\n  showEndIconVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  startIconSlot?: keyof PlasmicClassArgs<C>;\n  endIconSlot?: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n  input: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useTextInput<\n  P extends PlumeTextInputProps,\n  C extends AnyPlasmicClass\n>(\n  plasmicClass: C,\n  props: P,\n  config: TextInputConfig<C>,\n  ref: TextInputRef = null\n) {\n  const {\n    isDisabled,\n    startIcon,\n    endIcon,\n    showStartIcon,\n    showEndIcon,\n    className,\n    style,\n    inputClassName,\n    inputStyle,\n    ...rest\n  } = props;\n  const rootRef = React.useRef<HTMLElement>(null);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      focus() {\n        inputRef.current?.focus();\n      },\n      blur() {\n        inputRef.current?.blur();\n      },\n      getRoot() {\n        return rootRef.current;\n      },\n      getInput() {\n        return inputRef.current;\n      },\n      getBoundingClientRect() {\n        return rootRef.current?.getBoundingClientRect();\n      },\n    }),\n    [rootRef, inputRef]\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.showStartIconVariant, active: showStartIcon },\n      { def: config.showEndIconVariant, active: showEndIcon },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.startIconSlot && { [config.startIconSlot]: startIcon }),\n    ...(config.endIconSlot && { [config.endIconSlot]: endIcon }),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: {\n        ref: rootRef,\n        className,\n        style,\n      },\n    },\n    [config.input]: {\n      props: {\n        // We throw all of extra \"rest\" onto the `input` element, except props\n        // that were meant for the Plasmic component -- the args and variants.\n        // We make two exceptions though:\n        // 1. onChange - Plume text-input is kind of screwy, and the \"value\" state\n        //    of the input element is not exposed to the outer component via the\n        //    normal way; instead, we register a separate \"value\" state that's\n        //    in additional to the input.value state. So that means there are\n        //    two `onChange` that we need to pipe through -- the one that updates\n        //    `$state.input.value`, the input value state internal to the component,\n        //    and the one that updates `$state.value`, the separate value state\n        //    exposed to the outside. The generated <PlasmicTextInput/> will pass\n        //    in the onChange for updating the internal `$state.input.value`, and\n        //    props.onChange here will pass in the onChange for updating the\n        //    externally exposed `$state.value`. Wow! Very sad.  If\n        //    `$state.input.value` were just externally exposed, then we wouldn't\n        //    need to do so; but we can't retroactively update people's TextInput\n        //    components that have already been forked :-/\n        // 2. `required`, because that prop existed prior to Plume pkg <= 19.1.1,\n        //    but it was not linked to the input's `required` attribute as it should.\n        //    So this again works around older versions of TextInput out there.\n        ...omit(\n          rest as any,\n          ...plasmicClass.internalArgProps.filter(\n            (prop) => prop !== \"required\" && prop !== \"onChange\"\n          ),\n          ...plasmicClass.internalVariantProps\n        ),\n        disabled: isDisabled,\n        ref: inputRef,\n        className: inputClassName,\n        style: inputStyle,\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n"],"names":[],"mappings":"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"}