{"version":3,"file":"index.js","sources":["../../../../src/plume/button/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { omit, pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\n\ninterface PlumeCommonProps {\n  showStartIcon?: boolean;\n  showEndIcon?: boolean;\n  startIcon?: React.ReactNode;\n  endIcon?: React.ReactNode;\n  children?: React.ReactNode;\n  isDisabled?: boolean;\n}\n\ninterface HtmlButtonProps\n  extends Omit<React.ComponentProps<\"button\">, \"ref\" | \"disabled\"> {}\n\ninterface HtmlAnchorProps\n  extends Omit<React.ComponentProps<\"a\">, \"ref\" | \"href\" | \"target\"> {}\n\ninterface PlumeActualButtonProps {\n  submitsForm?: boolean;\n}\n\ninterface PlumeAnchorProps {\n  link?: string;\n  target?: React.ComponentProps<\"a\">[\"target\"] | boolean;\n}\n\nexport type PlumeButtonProps = PlumeCommonProps &\n  PlumeActualButtonProps &\n  PlumeAnchorProps;\n\nexport type BaseButtonProps = PlumeButtonProps &\n  HtmlButtonProps &\n  HtmlAnchorProps;\n\ntype AllButtonProps = PlumeCommonProps &\n  PlumeActualButtonProps &\n  HtmlButtonProps;\ntype AllAnchorProps = PlumeCommonProps & PlumeAnchorProps & HtmlAnchorProps;\n\nexport type HtmlAnchorOnlyProps = Exclude<\n  keyof AllAnchorProps,\n  keyof AllButtonProps\n>;\nexport type HtmlButtonOnlyProps = Exclude<\n  keyof AllButtonProps,\n  keyof AllAnchorProps\n>;\n\nexport type ButtonRef = React.Ref<HTMLButtonElement | HTMLAnchorElement>;\n\ninterface ButtonConfig<C extends AnyPlasmicClass> {\n  showStartIconVariant: VariantDef<PlasmicClassVariants<C>>;\n  showEndIconVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  startIconSlot?: keyof PlasmicClassArgs<C>;\n  endIconSlot?: keyof PlasmicClassArgs<C>;\n  contentSlot: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useButton<\n  P extends PlumeButtonProps,\n  C extends AnyPlasmicClass\n>(plasmicClass: C, props: P, config: ButtonConfig<C>, ref: ButtonRef = null) {\n  const {\n    link,\n    isDisabled,\n    startIcon,\n    endIcon,\n    showStartIcon,\n    showEndIcon,\n    children,\n    target,\n    submitsForm = false,\n    ...rest\n  } = props;\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.showStartIconVariant, active: showStartIcon },\n      { def: config.showEndIconVariant, active: showEndIcon },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.startIconSlot && { [config.startIconSlot]: startIcon }),\n    ...(config.endIconSlot && { [config.endIconSlot]: endIcon }),\n    [config.contentSlot]: children,\n  };\n\n  let buttonType = undefined;\n  if (!link) {\n    if (\n      !plasmicClass.internalVariantProps.includes(\"type\") &&\n      !plasmicClass.internalArgProps.includes(\"type\") &&\n      \"type\" in rest\n    ) {\n      // There's no Plasmic-defined variant or arg called \"type\",\n      // but the user passed in a \"type\" arg, so must be an override\n      // or direct instantiation. We use that value\n      buttonType = rest.type;\n    } else {\n      // Otherwise, we set buttonType depending in submitsForm\n      buttonType = submitsForm ? \"submit\" : \"button\";\n    }\n  }\n\n  const overrides: Overrides = {\n    [config.root]: {\n      as: link ? \"a\" : \"button\",\n      props: {\n        // Put this at the top, as user may also have set `type` as\n        // inherited from \"button\", so let `rest` override it\n        ...omit(\n          rest as any,\n          ...plasmicClass.internalArgProps,\n          ...plasmicClass.internalVariantProps\n        ),\n        type: buttonType,\n        ref: ref,\n        disabled: isDisabled,\n        target:\n          target === true ? \"_blank\" : target === false ? undefined : target,\n        ...(!!link && { href: link }),\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n"],"names":[],"mappings":"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"}