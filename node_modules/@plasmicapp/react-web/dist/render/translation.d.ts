import React from "react";
export type PlasmicTranslator = (str: string, opts?: {
    components?: {
        [key: string]: React.ReactElement;
    };
}) => React.ReactNode;
export interface PlasmicI18NContextValue {
    translator?: PlasmicTranslator;
    tagPrefix?: string;
}
export declare const PlasmicTranslatorContext: React.Context<PlasmicI18NContextValue | PlasmicTranslator | undefined>;
export interface TransProps {
    transKey?: string;
    children?: React.ReactNode;
}
export declare function usePlasmicTranslator(): PlasmicTranslator | undefined;
export declare function genTranslatableString(elt: React.ReactNode, opts?: {
    tagPrefix?: string;
}): {
    str: string;
    components: {
        [key: string]: React.ReactElement<any, string | React.JSXElementConstructor<any>>;
    };
    componentsCount: number;
};
export declare function Trans({ transKey, children }: TransProps): React.ReactNode;
