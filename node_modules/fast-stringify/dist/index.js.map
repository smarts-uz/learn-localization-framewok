{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * @function getReferenceKey\n *\n * @description\n * get the reference key for the circular value\n *\n * @param keys the keys to build the reference key from\n * @param cutoff the maximum number of keys to include\n * @returns the reference key\n */\nfunction getReferenceKey(keys: string[], cutoff: number) {\n  return keys.slice(0, cutoff).join('.') || '.';\n}\n\n/**\n * @function getCutoff\n *\n * @description\n * faster `Array.prototype.indexOf` implementation build for slicing / splicing\n *\n * @param array the array to match the value in\n * @param value the value to match\n * @returns the matching index, or -1\n */\nfunction getCutoff(array: any[], value: any) {\n  const { length } = array;\n\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n\n  return 0;\n}\n\ntype StandardReplacer = (key: string, value: any) => any;\ntype CircularReplacer = (key: string, value: any, referenceKey: string) => any;\n\n/**\n * @function createReplacer\n *\n * @description\n * create a replacer method that handles circular values\n *\n * @param [replacer] a custom replacer to use for non-circular values\n * @param [circularReplacer] a custom replacer to use for circular methods\n * @returns the value to stringify\n */\nfunction createReplacer(\n  replacer?: StandardReplacer,\n  circularReplacer?: CircularReplacer,\n): StandardReplacer {\n  const hasReplacer = typeof replacer === 'function';\n  const hasCircularReplacer = typeof circularReplacer === 'function';\n\n  const cache = [];\n  const keys = [];\n\n  return function replace(key: string, value: any) {\n    if (typeof value === 'object') {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n\n        keys[keys.length] = key;\n\n        const valueCutoff = getCutoff(cache, value);\n\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer\n            ? circularReplacer.call(this, key, value, getReferenceKey(keys, valueCutoff))\n            : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\n\n/**\n * @function stringify\n *\n * @description\n * strinigifer that handles circular values\n *\n * @param the value to stringify\n * @param [replacer] a custom replacer function for handling standard values\n * @param [indent] the number of spaces to indent the output by\n * @param [circularReplacer] a custom replacer function for handling circular values\n * @returns the stringified output\n */\nexport default function stringify(\n  value: any,\n  replacer?: StandardReplacer,\n  indent?: number,\n  circularReplacer?: CircularReplacer,\n) {\n  return JSON.stringify(value, createReplacer(replacer, circularReplacer), indent);\n}\n"],"names":["getReferenceKey","keys","cutoff","slice","join","getCutoff","array","value","length","index","createReplacer","replacer","circularReplacer","hasReplacer","hasCircularReplacer","cache","replace","key","thisCutoff","splice","valueCutoff","call","stringify","indent","JSON"],"mappings":";;;;;;EAAA;;;;;;;;;;EAUA,SAASA,eAAT,CAAyBC,IAAzB,EAAyCC,MAAzC,EAAyD;EACvD,SAAOD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcD,MAAd,EAAsBE,IAAtB,CAA2B,GAA3B,KAAmC,GAA1C;EACD;EAED;;;;;;;;;;;;EAUA,SAASC,SAAT,CAAmBC,KAAnB,EAAiCC,KAAjC,EAA6C;EAAA,MACnCC,MADmC,GACxBF,KADwB,CACnCE,MADmC;;EAG3C,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,MAA5B,EAAoC,EAAEC,KAAtC,EAA6C;EAC3C,QAAIH,KAAK,CAACG,KAAD,CAAL,KAAiBF,KAArB,EAA4B;EAC1B,aAAOE,KAAK,GAAG,CAAf;EACD;EACF;;EAED,SAAO,CAAP;EACD;;EAKD;;;;;;;;;;EAUA,SAASC,cAAT,CACEC,QADF,EAEEC,gBAFF,EAGoB;EAClB,MAAMC,WAAW,GAAG,OAAOF,QAAP,KAAoB,UAAxC;EACA,MAAMG,mBAAmB,GAAG,OAAOF,gBAAP,KAA4B,UAAxD;EAEA,MAAMG,KAAK,GAAG,EAAd;EACA,MAAMd,IAAI,GAAG,EAAb;EAEA,SAAO,SAASe,OAAT,CAAiBC,GAAjB,EAA8BV,KAA9B,EAA0C;EAC/C,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;EAC7B,UAAIQ,KAAK,CAACP,MAAV,EAAkB;EAChB,YAAMU,UAAU,GAAGb,SAAS,CAACU,KAAD,EAAQ,IAAR,CAA5B;;EAEA,YAAIG,UAAU,KAAK,CAAnB,EAAsB;EACpBH,UAAAA,KAAK,CAACA,KAAK,CAACP,MAAP,CAAL,GAAsB,IAAtB;EACD,SAFD,MAEO;EACLO,UAAAA,KAAK,CAACI,MAAN,CAAaD,UAAb;EACAjB,UAAAA,IAAI,CAACkB,MAAL,CAAYD,UAAZ;EACD;;EAEDjB,QAAAA,IAAI,CAACA,IAAI,CAACO,MAAN,CAAJ,GAAoBS,GAApB;EAEA,YAAMG,WAAW,GAAGf,SAAS,CAACU,KAAD,EAAQR,KAAR,CAA7B;;EAEA,YAAIa,WAAW,KAAK,CAApB,EAAuB;EACrB,iBAAON,mBAAmB,GACtBF,gBAAgB,CAACS,IAAjB,CAAsB,IAAtB,EAA4BJ,GAA5B,EAAiCV,KAAjC,EAAwCP,eAAe,CAACC,IAAD,EAAOmB,WAAP,CAAvD,CADsB,aAEdpB,eAAe,CAACC,IAAD,EAAOmB,WAAP,CAFD,MAA1B;EAGD;EACF,OAnBD,MAmBO;EACLL,QAAAA,KAAK,CAAC,CAAD,CAAL,GAAWR,KAAX;EACAN,QAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUgB,GAAV;EACD;EACF;;EAED,WAAOJ,WAAW,GAAGF,QAAQ,CAACU,IAAT,CAAc,IAAd,EAAoBJ,GAApB,EAAyBV,KAAzB,CAAH,GAAqCA,KAAvD;EACD,GA5BD;EA6BD;EAED;;;;;;;;;;;;;;AAYA,EAAe,SAASe,SAAT,CACbf,KADa,EAEbI,QAFa,EAGbY,MAHa,EAIbX,gBAJa,EAKb;EACA,SAAOY,IAAI,CAACF,SAAL,CAAef,KAAf,EAAsBG,cAAc,CAACC,QAAD,EAAWC,gBAAX,CAApC,EAAkEW,MAAlE,CAAP;EACD;;;;;;;;"}